.categories ['OpenSource']
.dateCreated 20100810T16:24:47
.date_modified 20110908T10:27:57
.date_modified_gmt 20110908T14:27:57
.link http://ocpsoft.org/opensource/the-problem-is-not-the-system-the-problem-is-education/
.mt_allow_comments 1
.mt_allow_pings 1
.mt_excerpt 
.mt_keywords 
.permaLink http://ocpsoft.org/opensource/the-problem-is-not-the-system-the-problem-is-education/
.post_status publish
.postid 1528
.title The problem is not the system; the problem is education.
.userid 3
.wp_author_display_name Lincoln Baxter III
.wp_author_id 3
.wp_more_text 
.wp_password 
.wp_post_format standard
.wp_post_thumbnail 
.wp_slug the-problem-is-not-the-system-the-problem-is-education
<p>"The problem is not the system, its the way someone can get in. To be honest, most tutorials, how-tos, and documentation sucks, because they ALL are written like the reader already knows the trick. No doc about [Technology] is written for newbies."
</p>
<!--more-->
<div class="featured">

<h3>Technology == "EJB"</h3>
<div class="inside">"I know there are documents related to working with the [Technology], setting it up in Eclipse, but might I propose one more small step related to how you can go about changing some [Technology] code and seeing it in action? It might be really useful to document how you guys set up your environments for a develop, deploy and run cycle."</div>

<h3>Technology == "CDI"</h3>
<div class="inside">"Discussing the general mechanics of how the module can register its beans, interceptors, etc. would be a great start. Examples using [Technology] would be a great addition here. And just in general, a solid elaboration on each of the design notes above (including examples of DOs and DON'Ts) will make it easier for anyone to comprehend. I know that at least some of this may be in the Weld/CDI documentation, but having something ready-to-serve could go a long way in enticing developers to contribute and try out this new software."</div>

<h3>Technology == "JSF"</h3>
<div class="inside">"I just don't know what to do. Everyone shows how create components or how to create AJAX, but how do I make a page that accesses data? There are no good examples, all hard to understand and never give a full picture; frequently I do things exactly the same way and it doesn't work."</div>
</div>

<h2>Technology == Education</h2>
<div style="margin: 5px;" ><p>It is clear to me that the gap in our Java EE community is not a fault of the technology. The technology is quite simple (as I learned while doing a <a href="http://ocpsoft.com/java/spring-to-java-ee-a-migration-guide-cdi-jsf-jpa-jta-ejb/">deep port of a Spring-based app to Java EE</a>.)</p>

<p>Just as I think the future of the United States of America is in jeopardy because of budget cuts in education and health care, the future of Java EE is in jeopardy because nobody is willing to pay for any kind of decent, centralized, use-case driven documentation and examples. Teaching by example that is done so well on <a href="http://php.net" target="_blank">http://php.net</a> and <a href="http://playframework.org">http://playframework.org</a>; Java EE is the largest web-framework without a home.</p>

<p>Education is always 95% of the solution. We already have the technology, but if nobody can <em>figure out</em> how to use it, then nobody <em>is going to</em> use it; and let me tell you, it's not that hard once you know "the trick."</p></div>

<center><h2>Who's going to step up and claim a few hundred thousand page-views per month?</h2>
<h2>Technology == "Java EE"</h2></center>