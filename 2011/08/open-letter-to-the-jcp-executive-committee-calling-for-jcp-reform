.categories ['OpenSource']
.dateCreated 20110802T03:00:08
.link http://ocpsoft.org/opensource/open-letter-to-the-jcp-executive-committee-calling-for-jcp-reform/
.mt_allow_comments 1
.mt_allow_pings 1
.mt_excerpt 
.mt_keywords 
.mt_text_more 
<div class="featured"><strong><span style="color: red;">Disclaimer: </span></strong>This call to action represents my views and not necessarily the views of my employer or any other entity; as such, please try to keep that in mind when referencing this document externally.</div>
<h2>Goals and current problems</h2>
The goal and of this call to action parallels a statement made by Mark Little, CTO of JBoss and member of the EC, in response to questions for the 2010 EC candidates <a href="#ref2">[2]</a>.
<blockquote><q>We believe that the EC still has an important role to play in the future of Java, and working within the EC is the best place to push for change and improvements. Java is certainly more "open" now than it was a decade ago, but it's not as open as [...] other standards bodies [OMG, OASIS, W3C and IETF]. We would like to see that change.</q></blockquote>
Indeed, the central problem with the current JCP is lack of transparency and openness. Although the JCP defines itself as "the open, participative process to develop and revise the Java technology specifications, reference implementations and test suites", it's not very open nor participative in practice. The community is almost entirely excluded when developing so called "open standards".

The root cause of this problem is that the Expert Group (EG) mailinglists are not open to the public (save a few exceptions, notably JSR-303 and JSR-311). The mailinglists are where the bulk of the technology design takes place. The private mailinglists don't merely close the doors to the general public. EG members from one JSR can't even read the correspondence of another JSR.

Feedback is one directional, from community to EG. All the general public can see are the drafts of the JSRs. They don't know how the EG arrived at that draft, meaning they aren't able to study the discussions that went into it. The EG may reciprocate by publishing another specification draft, with or without the feedback incorporated.

While companies and major Java leaders are involved in the JCP, individuals from the Java community have to really fight to be included or provide feedback. Let us not forget the significance of their participation, as Mark Little points out.
<blockquote><q>A strong JCP and a strong EC should be to the benefit of the entire Java community and not just to a select few.</q></blockquote>
The JCP also fails to respect the nature of software development. Instead of following an iterative process, JSRs target big-bang releases that have no clear continuum to the next generation. These major shifts in the platform make it increasingly harder for consumers to carry out migrations. Smaller releases would be easier to adopt. There are also huge lapses between releases, which is time for the technology to fall out of date.

How can we expect to define a unified and consistent platform that integrates well if the technologies bundled are created in different campuses at different times? The decisions that occur behind close doors effectively turn off would be participants and consumers. The community becomes frustrated because they don't know what's going on.

It's true that progress can emerge even from even a crippled process. There's no doubt that Java EE has been experiencing a revival since the release of Java EE 6, but with no clear target for EE 7, how long can the honeymoon last? Bill Burke cites how a small company like Red Hat has been able to make a big impact on the JCP standards <a href="#ref3">[3]</a>. He provides this evidence to make the point that the JCP is salvageable. Great, so let's salvage it and get it moving again.
<h2>The call for reform</h2>
I propose that the JCP redefine itself as:

<address>"An open, community-oriented standards organization that produces standard technical specifications for Java technology in order to keep it competitive and to bring value and choice to businesses worldwide. These goals are achieved by honoring the nature of software development, which means fostering a collaborative, evolutionary process where change of all types (addition, revision and deprecation) is inevitable and standards are snapshots in a timeline along that evolution.Standards produced by this process are published under and open, non-clickthrough license, which applies to the specification documents, the APIs, the reference implementations (RIs) and the compatibility test suites (TCKs). A fair voting system is used to maintain a balance of power and there is complete openness of process and membership.The goal of this organization, above all else, is to produce timely, iterative, high-quality standards, which means never standing in the way of progress nor precluding proposals or ideas that may lead to a better way forward."

</address>To make it very clear what changes we are calling for, we provide specific points, ranging from "must have" to "nice to have".
<h3>Must haves:</h3>
<ul>
	<li>Specifications must be published under and open, non-clickthrough license, which covers the specification documents, the APIs, the reference implementations and the compatibility test suites</li>
	<li>Specifications should be free to use and implement (no TCK fees)</li>
	<li>Specifications must provide a non-clickthrough specification document, stored in an open VCS system and easily viewable online by anyone (a nightly build of the spec would be sufficient of the document is created by for-pay software)</li>
	<li>Specifications should be required to publish API binaries, sources, and JavaDocs to Maven Central</li>
	<li>Specifications must have public issue trackers, open source TCKs and public mailinglists for all JSRs, and require information about these resources to be public and easy to find</li>
	<li>Expert Groups (EGs) should not be automatically disband after a final release of a spec (maintenance releases are an extremely important part of a JSRs evolution)</li>
	<li>Maintenance releases should be easier to initiate (and get approved); the software process should be iterative</li>
	<li>Names of individual representatives, and the company they represent, should be listed on the specification page; it should be clear who the representatives are</li>
	<li>There should be an official process for deprecating or removing a technology; old technologies currently die a slow unused death, dragging the platform down, and leaving complexity in its wake as vendors are required to pass the TCKs; let's not hide behind the term "pruning"</li>
	<li>All specification communication must be considered public, and must unless initiated privately by a member of the community, be held on said platform.</li>
</ul>
<h3>For accessibility:</h3>
<ul>
	<li>Specification documents should be made available in HTML format for easy web access; PDFs should merely one viewing option, not the only one</li>
	<li>Specifications should provide end-user, user-case driven documentation for a technology (for instance like the first half of the Weld reference guide and the Java EE tutorial)</li>
	<li>Decent and familiar social business software should be used for jcp.org to make it truly a community (jcp.org is extremely difficult to use and poorly organized)</li>
	<li>jcp.org should host all the specification artifacts (specification document, API, reference implementation and TCK) (there is currently too much burden on developer to find them)</li>
	<li>Specification artifacts should require no more than two clicks to begin said download, with no login required</li>
</ul>
<h3>Nice to have:</h3>
<ul>
	<li>Periodic EC meetings should be open to the public</li>
	<li>Platform releases (i.e., Java EE) should occur at regular, scheduled intervals, every 6 months or so, with clear paths for ratification and deprecation of JSRs.</li>
	<li>The JCP should be an independent organization, similar in structure to the Eclipse foundation; it should be run and funded by donations/investments rather than petty membership fees</li>
	<li>JSRs must be allowed to compete with each other, or standards evolution merely excludes and fragments participation within the Java community (for instance, one view technology is not sufficient)</li>
</ul>
<h2>Support and endorsement</h2>
The evidence of a general call for JCP reform is widespread.

Earlier this year, Mark Little, Red Hat's representative on the EC, called for a more open process, with everyone acting as peers. <a href="#ref4">[4]</a> He reinforced those statements in his follow-up to questions posed to the EC candidates. <a href="#ref2">[2]</a> IBM states on their standards page that they will "begin or end participation in standards bodies based on the quality and openness of their processes, membership rules, and intellectual property policies." <a href="#ref5">[5]</a> Bob Sutor has said that IBM expects to see "long needed reforms in the JCP [...] to make it more democratic, transparent, and open." <a href="#ref6">[6]</a> In an open letter from the CTO of SAP, Vishal Sikka, he calls for more openness in the JCP, saying "To ensure the continued role of Java in driving economic growth, we believe it is essential to transition the stewardship of the language and platform into an authentically open body that is not dominated by an individual corporation." <a href="#ref7">[7]</a> Darryl K. Taft published an editorial in eWeek outlining 15 guidelines for making Java better, one of which included setting the JCP free. <a href="#ref8">[8]</a> Finally, Doug Lea made a firm statement a few weeks ago that the JCP is no longer a credible standards organization <a href="#ref9">[9]</a>.

There are numerous other public statements on the web of calls for <a href="http://www.google.com/search?q=JCP+reform">JCP reform</a>.
<h2>Summary</h2>
I'm calling for reform in the JCP. I want the JCP to be accountable to its namesake, a "community process." The fact that the JCP claims to be open but does not uphold this promise tarnishes it and causes people to lose trust. It's a tragedy that the technology is way ahead of the process.

But hope is not lost. A few fundamental changes would drastically improve the effectiveness and credibility of the JCP. As Mark Little has said, "we would like to see the JCP continue to evolve and address those issues which we all know tarnish it."

I hope that the new EC is brave enough to rise to this challenge.

Signed,

Dan Allen
Lincoln Baxter, III

<strong>Add your signature</strong> to the <a href="http://www.petitiononline.com/fixjcp/petition.html">corresponding entry on 'Petition Online'</a> to join the call.

<iframe src="http://www.petitiononline.com/signatures.php?petition=fixjcp" frameborder="0" scrolling="no" width="102" height="36"></iframe>
<h2>References</h2>
<ol>
	<li id="ref1"><a href="http://www.javalobby.org/java/forums/t103921.html">http://www.javalobby.org/java/forums/t103921.html</a>
<a href="http://ocpsoft.com/java/why-doesnt-jpa-jma-jta-ejb-jsf-cdi-work-jee-is-too-complicated">http://ocpsoft.com/java/why-doesnt-jpa-jma-jta-ejb-jsf-cdi-work-jee-is-too-complicated</a></li>
	<li id="ref2"><a href="http://wiki.jcp.org/boards/index.php?t=5396">http://wiki.jcp.org/boards/index.php?t=5396</a></li>
	<li id="ref3"><a href="http://bill.burkecentral.com/2010/10/26/jcp-is-salvagable">http://bill.burkecentral.com/2010/10/26/jcp-is-salvagable</a></li>
	<li id="ref4"><a href="http://www.computerworld.com/s/article/9171838/What_users_want_from_Oracle_s_Java_Community_Process?taxonomyId=63">http://www.computerworld.com/s/article/9171838/What_users_want_from_Oracle_s_Java_Community_Process?taxonomyId=63</a></li>
	<li id="ref5"><a href="http://www.research.ibm.com/files/standards_wikis.shtml">http://www.research.ibm.com/files/standards_wikis.shtml</a></li>
	<li><a href="http://www.sutor.com/c/2010/10/ibm-joins-the-openjdk-community">http://www.sutor.com/c/2010/10/ibm-joins-the-openjdk-community</a></li>
	<li id="ref7"><a href="http://www.sdn.sap.com/irj/scn/weblogs?blog=/pub/wlg/16648">http://www.sdn.sap.com/irj/scn/weblogs?blog=/pub/wlg/16648</a></li>
	<li id="ref8"><a href="http://www.eweek.com/c/a/Application-Development/15-Ways-Oracle-Can-Make-Java-Better-and-Improve-Its-Stance-with-Developers-271933/">http://www.eweek.com/c/a/Application-Development/15-Ways-Oracle-Can-Make-Java-Better-and-Improve-Its-Stance-with-Developers-271933/</a></li>
	<li id="ref9"><a href="http://gee.cs.oswego.edu/dl/html/jcp22oct10.html">http://gee.cs.oswego.edu/dl/html/jcp22oct10.html</a></li>
</ol>
.permaLink http://ocpsoft.org/opensource/open-letter-to-the-jcp-executive-committee-calling-for-jcp-reform/
.post_status publish
.postid 1667
.title Open Letter to the JCP Executive Committee calling for JCP reform
.userid 389
.wp_author_display_name Dan Allen
.wp_author_id 389
.wp_password 
.wp_post_format standard
.wp_slug open-letter-to-the-jcp-executive-committee-calling-for-jcp-reform
Seizing the opportunity of a <a href="http://jcp.org/en/whatsnew/elections">new Executive Committee (EC)</a> under a <a href="http://java.dzone.com/articles/oracle-and-jcp">new regime</a>, I'd like to issue a call for reform of the <a href="http://jcp.org">Java Community Process (JCP)</a> to allow it to produce more iterative and timely technology and live up to it's name as a "community process", rather than acting as the "corporate process" many believe it is today <a href="#ref1">[1]</a>.
