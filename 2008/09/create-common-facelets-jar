
<wp_sync_categories>['JSF', 'OpenSource']</wp_sync_categories>

<wp_sync_dateCreated>20080909T20:03:43</wp_sync_dateCreated>

<wp_sync_description><h2>Tutorial - Step By Step</h2>
If you've learned to use JSF Facelets to create on-the-fly, simple components using XHTML, then you probably have a whole slew of custom components that need to be copied between various projects, and can be somewhat painful to keep up to date. You may have tried to move them into a jar file, but Facelets can't find them there (without some help from us.)

<div class="featured">
<div class="inside">

<font color="green">UPDATE  - 09/15/2010:</font> In JSF2, this process is no longer required. Simply use JSF2 relocatable resources: Any file placed under the /WebApp/resources directory, and any files placed in the jar:/META-INF/resources directories can be served directly using the JSF2 notation:
<p/>
<pre lang="perl">#{resource['ocpsoft-jsf2-templates/liquid-blue-2col:images/bodybg.jpg']}</pre>

Which targets the following resource:

<pre lang="xml">[META-INF or WebContent]/resources/ocpsoft-jsf2-templates/liquid-blue-2col/images/bodybg.jpg</pre>

</div>
</div>

</wp_sync_description>

<wp_sync_link>http://ocpsoft.org/opensource/create-common-facelets-jar/</wp_sync_link>

<wp_sync_mt_allow_comments>1</wp_sync_mt_allow_comments>

<wp_sync_mt_allow_pings>1</wp_sync_mt_allow_pings>

<wp_sync_mt_excerpt>If you've learned to use JSF Facelets to create on-the-fly, simple components using XHTML, then you probably have a whole slew of custom components that need to be copied between various projects, and can be somewhat painful to keep up to date. You may have tried to move them into a jar file, but Facelets can't find them there (without some help from us.)</wp_sync_mt_excerpt>

<wp_sync_mt_keywords>JSF Facelets Java</wp_sync_mt_keywords>

<wp_sync_mt_text_more>
<h2>Goals</h2>
The intent of this tutorial is to explain how to create a packaged jar file, which can be referenced from multiple projects. and which contains all of your tag components and classes for easier maintenance.

<em>(Please note that you may still include non-xhtml based components in this tag library, this does not limit you to use only xhtml facelets.)</em>
<h3>Download the following archive</h3>
<ul>
	<li>Facelets Jar: jsf-facelets.jar <a href="https://facelets.dev.java.net/servlets/ProjectDocumentList?folderID=3635&amp;expandFolder=3635&amp;folderID=0" target="_blank">(</a><a href="https://facelets.dev.java.net/servlets/ProjectDocumentList?folderID=3635&amp;expandFolder=3635&amp;folderID=0" target="_blank">1.1.14 was used in this tutorial)
</a></li>
</ul>
<h2>Instructions:</h2>
<ul>
	<li>Create a new Java Project. We will call it "facelets-taglib-common"<em>
We recommend the title for your project should be the same as your tag library, since this will be the new home of those custom (shiny) components.</em></li>
	<li>Extract the Facelets archive and copy "jsf-facelets.jar" into your project. Make sure that it is added to the class path.</li>
	<li>Copy and paste the following source files into your project.</li>
	<li>Create your facelets-taglib.common.xml definition file.</li>
	<li>Make necessary additions to web.xml</li>
	<li>Create your first tags.</li>
</ul>
When you are finished with this tutorial, you should have the following directory structure:<br/><br/>
<pre style="padding-left: 150px;"><strong>facelets-taglib-common</strong><strong>/</strong>
+---JavaSource/
|   |   CustomResourceResolver.java
|   -
|
+---lib/
|   |   jsf-facelets.jar
|   -
|
+---META-INF/
|   |   facelets-common-taglib.xml
|   |   facelets-common-taglib.tld
|   |   MANIFEST.MF
|   |
|   +---taglib/
|       |   analytics.xhtml
|       |   doctype.xhtml
|       |   your_custom_tag.xhtml
-       -</pre>
<br/>
<h4 style="text-align: center;">----</h4>
<br/>
<h2>CustomResourceResolver.java</h2>
This is a required utility class to allow Facelets to find resources that are not in your project folder, but instead, anywhere on the build path.

Put this file in your source folder. The reason putting your XHTML custom components and tag XML files does not work out of the box is because Facelets uses a strict ResourceResolver. The default ResourceResolver looks only in the path of your current project / War. Fortunately, however, we can override the default behavior.
<pre lang="java">import com.sun.facelets.impl.DefaultResourceResolver;
import com.sun.facelets.impl.ResourceResolver;

public class CustomResourceResolver extends DefaultResourceResolver implements ResourceResolver
{
    @Override
    public URL resolveUrl(String resource)
    {
        URL resourceUrl = super.resolveUrl(resource);
        if (resourceUrl == null)
        {
            if (resource.startsWith("/"))
            {
                resource = resource.substring(1);
            }
            resourceUrl = Thread.currentThread().getContextClassLoader().getResource(resource);
        }
        return resourceUrl;
    }
}</pre>
<br/>
<h4 style="text-align: center;">----</h4>
<br/>
<h2>facelets-taglib-common.xml</h2>
This file defines your tag-library to facelets, it is required. See the facelets <a href="https://facelets.dev.java.net/nonav/docs/dev/docbook.html#taglib-create" target="_blank">documentation</a>. After this step, you should be able to package and export your project as a Jar file.

This file needs to be located in your <em>/facelets-taglib-common/META-INF/</em> directory.
<pre lang="config"><?xml version="1.0"?>
<!DOCTYPE facelet-taglib PUBLIC
  "-//Sun Microsystems, Inc.//DTD Facelet Taglib 1.0//EN"
  "facelet-taglib_1_0.dtd">
<facelet-taglib>
	<namespace>http://www.ocpsoft.com/facelets-common</namespace>
	<tag>
		<tag-name>analytics</tag-name>
		<source>analytics.jspx</source>
	</tag>
	<tag>
		<tag-name>doctype</tag-name>
		<source>doctype.jspx</source>
	</tag>
</facelet-taglib></pre>
<br/>
<h4 style="text-align: center;">----</h4>
<br/>
<h2>facelets-taglib-common.tld <em>(optional)</em></h2>
This file describes your tag-library for your IDE's autocompletion, and for Validation, so that you can check during development to ensure that your tags are being properly used.

<strong>Note**:</strong> To enable autocompletion in your IDE, you probably need to copy this file into your own Web Application's <em>WebContent/META-INF/taglib/</em> directory, this does not affect Facelets.
<pre lang="config"><!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN" 
"http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">

<taglib xmlns="http://java.sun.com/JSP/TagLibraryDescriptor">
	<tlib-version>1.0</tlib-version>
	<jsp-version>1.2</jsp-version>
	<short-name>rest</short-name>
	<uri>http://www.yoursite.com/facelets-taglib-common</uri>
	<display-name>My Common Tag Library</display-name>
	<tag>
		<name>analytics</name>
		<tag-class>common/analytics.jspx</tag-class>
		<body-content>JSP</body-content>
		<description>
			Render a google analytics identifier tag.
		</description>
		<attribute>
			<name>siteId</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
			<description>
				Your unique google site-id, eg: UA-4723***-*
			</description>
		</attribute>
	</tag>
	<tag>
		<name>doctype</name>
		<tag-class>common/doctype.jspx</tag-class>
		<body-content>JSP</body-content>
		<description>
			Render an XHTML doctype declaration.
		</description>
	</tag></taglib></pre>
<br/>
<h4 style="text-align: center;">----</h4>
<br/>
<h2>web.xml</h2>
We need to make two additions to your Web Application's web.xml file in order for this to work. Assuming that you have already <a href="https://facelets.dev.java.net/nonav/docs/dev/docbook.html#config-faces">installed Facelets</a> into your <em>faces-config.xml</em> file, you also need to do two things here:
<ol>
	<li>Add your tag library XML file to the list of Libraries that Facelets will load.</li>
	<li>Override the default ResourceResolver</li>
</ol>
After this step, you should have a working configuration. Just make sure that your <em>facelets-taglib-common.jar</em> is on the class path, or that you have referenced the new taglibrary project as a dependency.
<pre lang="config"><context-param>
	<param-name>facelets.LIBRARIES</param-name>
	<param-value>
		/META-INF/taglib/facelets-taglib-common.xml
	</param-value>
</context-param>
<context-param>
	<param-name>facelets.RESOURCE_RESOLVER</param-name>
	<param-value>CustomResourceResolver</param-value>
</context-param></pre>
<br/>
<h4 style="text-align: center;">----</h4>
<br/>
<h2>Additional Resources:</h2>
Just in case you're wondering how we did doctype and analytics, here is the source:
<h2>analytics.xhtml</h2>
<pre lang="config"><?xml version="1.0" encoding="ISO-8859-1"?>

<!-- THIS FILE IS LICENCED UNDER THE GPL3
	Authors: 	Derek Hollis
			Lincoln Baxter, III
	
	Version:    1.2
	Date:	        2008/05/04
	 -->

<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core" version="2.0">

	<ui:composition>
		<h:outputText value='&lt;script type="text/javascript"&gt;'
			escape="false" />
		<h:outputText
			value='var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");'
			escape="false" />
		<h:outputText
			value='document.write(unescape("%3Cscript src=&#39;" + gaJsHost + "google-analytics.com/ga.js&#39; type=&#39;text/javascript&#39;%3E%3C/script%3E"));'
			escape="false"/>
		<h:outputText value='&lt;/script&gt;' escape="false" />
		
		<h:outputText value='&lt;script type="text/javascript"&gt;' escape="false" />
		<h:outputText value='var pageTracker = _gat._getTracker("#{siteId}");' escape="false" />
		<h:outputText value='pageTracker._initData();' escape="false" />
		<h:outputText value='pageTracker._trackPageview();' escape="false" />
		<h:outputText value='&lt;/script&gt;' escape="false" />
	</ui:composition>
</jsp:root></pre>
<br/>
<h2>doctype.xhtml</h2>
<pre lang="config"><?xml version="1.0" encoding="ISO-8859-1"?>

<!-- THIS FILE IS LICENCED UNDER THE GPL3
	Authors: 	Derek Hollis
			Lincoln Baxter, III
	
	Version:    $1.0$
	Date:	        2008/05/04
-->

<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core" version="2.0">

	<ui:composition>
		<h:outputText value='&lt;?xml version="1.0" encoding="UTF-8"?&gt;'
			escape="false" />
		<h:outputText
			value='&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;'
			escape="false" />
	</ui:composition>
</jsp:root></pre>
<br/>
<h4 style="text-align: center;">----</h4>
<br/>
That should be everything. You should now be able to store your common facelets tags and components in a centralized location, allowing for re-use across projects and teams.
<h3>References</h3>
<ul>
	<li><a href="http://www.google.com/url?sa=t&amp;source=web&amp;ct=res&amp;cd=1&amp;url=https%3A%2F%2Ffacelets.dev.java.net%2F&amp;ei=QTLHSO28F4zqvAW58P3BAQ&amp;usg=AFQjCNH9xh-uwQ2iBV3ilrhBxoSEKVfeMQ&amp;sig2=bC8W5yiQ71MoydcbLSziOQ" target="_blank">Facelets Project</a></li>
</ul></wp_sync_mt_text_more>

<wp_sync_permaLink>http://ocpsoft.org/opensource/create-common-facelets-jar/</wp_sync_permaLink>

<wp_sync_post_status>publish</wp_sync_post_status>

<wp_sync_postid>13</wp_sync_postid>

<wp_sync_title>Create a Common Facelets Tag Library: Share it across projects</wp_sync_title>

<wp_sync_userid>3</wp_sync_userid>

<wp_sync_wp_author_display_name>Lincoln Baxter III</wp_sync_wp_author_display_name>

<wp_sync_wp_author_id>3</wp_sync_wp_author_id>

<wp_sync_wp_password></wp_sync_wp_password>

<wp_sync_wp_post_format>standard</wp_sync_wp_post_format>

<wp_sync_wp_slug>create-common-facelets-jar</wp_sync_wp_slug>